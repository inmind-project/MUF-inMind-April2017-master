group 'edu.cmu.inmind'
version '2.0'

apply plugin: 'java'
apply plugin: 'maven'
// used for zip big files
apply plugin: 'com.github.johnrengelman.shadow'

apply plugin: 'application'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	flatDir {
		dirs 'lib'
	}
	maven {
		credentials {
			username 'inmind'
			password '2015InMindYahoo'
		}
		url "http://www.cs.cmu.edu/afs/cs/project/inmind-cmu-yahoo/www/maven2"
	}
	jcenter()
	maven {
		url 'https://oss.jfrog.org/libs-snapshot'
	}
}

allprojects {
	repositories {
		flatDir {
			dirs "${rootDir}/dialogos/libs"
		}
	}

	tasks.withType(JavaCompile) {
		// https://guides.gradle.org/performance/#compiler_daemon
		options.fork = true
		// https://guides.gradle.org/performance/#incremental_compilation
		options.incremental = true
	}

	// https://stackoverflow.com/a/23807352/1391325
	// https://guides.gradle.org/performance/#parallel_test_execution
	tasks.withType(Test) {
		maxParallelForks = (int) (Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
	}
}

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		// used for zip big files
		classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
	}
}

configurations {
	deployerJars
}

configurations.all {
	// Check for updates every hour.
	// You can force it to an immediate update by passing 0 instead of 3600
	resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
	resolutionStrategy.cacheDynamicVersionsFor(0, 'seconds')
	exclude group: 'xalan', module: 'xalan'
}

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile "org.mockito:mockito-core:1.+"
	compile 'edu.cmu.inmind.framework.multiuser:server:3.0-rc1:all'
	// version
	compile project(":dialogos")
	compile project(":saracommons")
	//compile project(":saracsc")
	compile project(":sarabeat")
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
	classifier "sources"
}

compileJava {
	options.encoding = "UTF-8"
}

mainClassName = 'edu.cmu.inmind.multiuser.sara.SaraServerMainClass'
applicationDefaultJvmArgs = ["-ea", "-Djava.awt.headless=true"]

//create a single Jar with all dependencies
jar {
	duplicatesStrategy = "warn"
	manifest {
		attributes 'Implementation-Title': 'SARA Multiuser',
				'Implementation-Version': version,
				'Main-Class': mainClassName
	}
	baseName = project.name + '-with-dependencies'
	from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
	exclude "META-INF/*.SF"
	exclude 'META-INF/*.DSA'
	exclude 'META-INF/*.RSA'
	zip64 true
}
